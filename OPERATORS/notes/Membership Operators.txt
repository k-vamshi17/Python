				===============================================
						Membership Operators
				===============================================
=>The Membership Operators are used for Checking the Existence of a Value in Iterable Object.
=>In Python Programmint, we have Two Types of Membership Operators. They are

				1. in Operator
				2. not in Operator
------------------------------------------------------------------------------------------------------------------------------------------------------------
1. in operator
------------------------------------------------------------------------------------------------------------------------------------------------------------
Syntax:    Value  in   Iterable-Object

=>Here "in" Operator Returns True provided "value" present in  Iterable-Object.
=>Here "in" Operator Returns False provided "value" not present in  Iterable-Object.
=>An Iterable-Object is one which is containing More Than One value ( sequence,list,set,dict )
=>A Non-Iterable-Object is one which is contains Only One Value ( int, float, bool.complex)
------------------------------------------------------------------------------------------------------------------------------------------------------------
2. not in Operator
------------------------------------------------------------------------------------------------------------------------------------------------------------
Syntax:    Value  not in   Iterable-Object
=>Here "not in" Operator Returns True provided "value" not present in  Iterable-Object.
=>Here "not in" Operator Returns False provided "value"  present in  Iterable-Object.
=>An Iterable-Object is one which is containing More Than One value ( sequence,list,set,dict )
=>A Non-Iterable-Object is one which is contains Only One Value ( int, float, bool.complex)
===========================================================================================
Examples
===========================================================================================
>>> s="PYTHON"
>>> "P" in s------------------True
>>> "P" not in s-------------False
>>> "N" not in s-------------False
>>> "N" in s------------------True
----------------------------
>>> s="PYTHON"
>>> "PYT" in s-------------True
>>> "HON" not in s-------False
>>> "HON" in s------------True
>>> s="PYTHON"
>>> "PYT" in s---------------True
>>> "HON" not in s-------False
>>> "HON" in s------------True
>>> "PTO" in s-------------False
>>> "PTO" not in s--------True
>>> "NOH" not in s-------True
>>> "HON" in s------------True
>>> "NOH" in s------------False
-----------------------
>>> s="PYTHON"
>>> "PTO" in s[::2]---------True
>>> "NOH" not in s[::-1]---False
>>> "NOH" in s[::-1]--------True
----------------------------------------------------
>>> lst=[10,"Rossum",34.56,2+3j]
>>> print(lst)--------------[10, 'Rossum', 34.56, (2+3j)]
>>> 34.56 not in lst------False
>>> "Ross" in lst---------False
>>> "Ross" in lst[1]-----True
>>> 2+3j in lst-------------True
>>> 10 not in lst[::-1]-----False
>>> 100 not in lst[::-1]----True
----------------------------------------------------
>>> lst=[10,"Rossum",34.56,2+3j]
>>> print(lst)--------------[10, 'Rossum', 34.56, (2+3j)]
>>> 2+3j in lst[-1]--------TypeError: argument of type 'complex' is not iterable
>>> 2+3j.real in lst[-1]--------TypeError: argument of type 'complex' is not iterable
>>> 2+3j.real not in lst[-1].real----TypeError: argument of type 'float' is not iterable
---------------------------------------------------------
>>> d1={10:"Apple",20:"Mango",30:"Kiwi"}
>>> print(d1,type(d1))----------{10: 'Apple', 20: 'Mango', 30: 'Kiwi'} <class 'dict'>
>>> "Apple" in d1---------------False
>>> 10 in d1-----------------------True
>>> "Kiwi" not in d1------------True
>>> "Apple" not in d1.values()----False
>>> d1[10] not in d1.values()------False
>>> (10,"Apple") in d1.items()----True
-----------------------------------------------------------------------
>>> "a" in {"a","e","i","o","u"}-------------True
>>>
>>> {"a","e"} in {"a","e","i","o","u"}-----False
------------------------------------------------------------
Bug
------------------------------------------------------------
>>> [10,20,30] in [10,20,30,40,50,60]-----False
>>> lst=[10,20,30]
>>> lst1=[10,20,30,40,50,60,70]
>>> lst in lst1------False
==============================================x==============================================






===========================================================================================
