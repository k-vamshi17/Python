				====================================================
						4. complex()
				====================================================
=>complex() is used for Converting Any Possible Type of Value into complex type Value.
=>Syntax:     varname=complex(int / float / bool / str )
----------------------------------------------------------------------------------------------------------------------------------------------------------
Example-1:  int type into complex type---------POSSIBLE
----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=10
>>> print(a,type(a))-----------10 <class 'int'>
>>> b=complex(a)
>>> print(b,type(b))----------- (10+0j) <class 'complex'>
>>> b=complex(-12)
>>> print(b,type(b))-----------(-12+0j) <class 'complex'>
----------------------------------------------------------------------------------------------------------------------------------------------------------
Example-2: float type into complex type------POSSIBLE
----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=1.2
>>> print(a,type(a))-----------1.2 <class 'float'>
>>> b=complex(a)
>>> print(b,type(b))-----------(1.2+0j) <class 'complex'>
>>> b=complex(-1.3)
>>> print(b,type(b))------------(-1.3+0j) <class 'complex'>
----------------------------------------------------------------------------------------------------------------------------------------------------------
Example-3: bool type into complex type-----POSSIBLE
----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=True
>>> print(a,type(a))--------------True <class 'bool'>
>>> b=complex(a)
>>> print(b,type(b))--------------(1+0j) <class 'complex'>
>>> a=False
>>> print(a,type(a))--------------False <class 'bool'>
>>> b=complex(a)
>>> print(b,type(b))-------------0j <class 'complex'>
----------------------------------------------------------------------------------------------------------------------------------------------------------
Example-4 : str type into complex type
----------------------------------------------------------------------------------------------------------------------------------------------------------
Case-1:  str int into  complex----POSSIBLE
-----------------------------------------------------------
>>> a="12"
>>> print(a,type(a))-----------12 <class 'str'>
>>> b=complex(a)
>>> print(b,type(b))------------(12+0j) <class 'complex'>
>>> b.real-----------------------12.0
>>> b.imag----------------------0.0
>>> b=complex("-23")
>>> print(b,type(b))-------------(-23+0j) <class 'complex'>
-----------------------------------------------------------
Case-2:  str float into  complex----POSSIBLE
-----------------------------------------------------------
>>> a="1.2"
>>> print(a,type(a))----------1.2 <class 'str'>
>>> b=complex(a)
>>> print(b,type(b))----------(1.2+0j) <class 'complex'>
>>> b=complex("-3.5")
>>> print(b,type(b))----------(-3.5+0j) <class 'complex'>
-----------------------------------------------------------
Case-3:  str bool into  complex------NOT POSSIBLE
-----------------------------------------------------------
>>> a="True"
>>> print(a,type(a))-------------True <class 'str'>
>>> b=complex(a)---------------ValueError: complex() arg is a malformed string
>>> b=complex("False")---------ValueError: complex() arg is a malformed string
-----------------------------------------------------------
Case-4:  str complex into  complex---POSSIBLE
-----------------------------------------------------------
>>> a="2+3j"
>>> print(a,type(a))-----------2+3j <class 'str'>
>>> b=complex(a)
>>> print(b,type(b))----------(2+3j) <class 'complex'>
>>> b=complex("2-3i")------ValueError: complex() arg is a malformed string
>>> b=complex("-2-3.4j")
>>> print(b,type(b))----------(-2-3.4j) <class 'complex'>
-----------------------------------------------------------
Case-5:  Pure str  into  complex--NOT POSSIBLE
-----------------------------------------------------------
>>> a="PYTHON"
>>> print(a,type(a))------------PYTHON <class 'str'>
>>> b=complex(a)-------------ValueError: complex() arg is a malformed string
-----------------------------------------------------------

==================================x==============================================