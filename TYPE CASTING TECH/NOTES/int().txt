			==========================================================
							1. int()
			==========================================================
=>int() is used for converting One Possible Type of Value into int type value.	
=>Syntax:    varname=int(float / bool / complex / str)
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Example1:  float type to  int  type---POSSIBLE
-----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=12.34
>>> print(a,type(a))-----------12.34 <class 'float'>
>>> b=int(a)
>>> print(b,type(b))-----------12 <class 'int'>
>>> b=int(0.345)
>>> print(b,type(b))-----------0 <class 'int'>
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Example2:  bool  type to  int  type----POSSIBLE
-----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=True
>>> print(a,type(a))----------True <class 'bool'>
>>> b=int(a)
>>> print(b,type(b))----------1 <class 'int'>
>>> b=int(False)
>>> print(b,type(b))-----------0 <class 'int'>
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Example3:  complex type to  int  type-----NOT POSSIBLE
-----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=2+3j
>>> print(a,type(a))-----------(2+3j) <class 'complex'>
>>> b=int(a)---------TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Example4:  str  type to  int  type
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Case-1:  str int  into  int type--POSSIBLE
---------------------------------------------
>>> a="12"
>>> print(a,type(a))------------12 <class 'str'>
>>> b=int(a)
>>> print(b,type(b))------------12 <class 'int'>
>>> b=int("123")
>>> print(b,type(b))------------123 <class 'int'>
---------------------------------------------
Case-2: str float  into  int type---NOT POSSIBLE
---------------------------------------------
>>> a="12.34"
>>> print(a,type(a))---------------12.34 <class 'str'>
>>> b=int(a)--------------------------ValueError: invalid literal for int() with base 10: '12.34'
>>> a=int("12.34")-----------------ValueError: invalid literal for int() with base 10: '12.34'
>>> a=int(12.34)
>>> print(a)-------------------------12
---------------------------------------------
Case-3: str bool  into  int type---NOT POSSIBLE
---------------------------------------------
>>> a="True"
>>> print(a,type(a))--------------True <class 'str'>
>>> b=int(a)------------------------ValueError: invalid literal for int() with base 10: 'True'
>>> b=int("False")----------------ValueError: invalid literal for int() with base 10: 'False'
------------------------------------------------
Case-4: str complex  into  int type--NOT POSSIBLE
------------------------------------------------
>>> a="2+3j"
>>> print(a,type(a))-------------2+3j <class 'str'>
>>> b=int(a)-----------------------ValueError: invalid literal for int() with base 10: '2+3j'
>>> a=int("2.5+3.4j")------------ValueError: invalid literal for int() with base 10: '2.5+3.4j'
----------------------------------------------
Case-5: Pure str   into  int type--NOT POSSIBLE
---------------------------------------------
>>> a="PYTHON"
>>> print(a,type(a))-----------------------PYTHON <class 'str'>
>>> b=int(a)---------------------------------ValueError: invalid literal for int() with base 10: 'PYTHON'
>>> b=int("HYD")--------------------------ValueError: invalid literal for int() with base 10: 'HYD'
----------------------------------------------------------------------------------------------------------------------------------------------------------


